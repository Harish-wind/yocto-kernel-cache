From 94c6036c9e03a6dc336b7c9d207664becabc39a7 Mon Sep 17 00:00:00 2001
From: Bruce Ashfield <bruce.ashfield@gmail.com>
Date: Tue, 11 Jun 2024 13:15:01 -0400
Subject: [PATCH] aufs6: match exports to functions

During the forward porting of aufs6, some of the symbol exports
became unmatched to the block that contained their functions.

As a result, we could end up with some errors as symbols were
exported that were never compiled.

Signed-off-by: Bruce Ashfield <bruce.ashfield@gmail.com>
---
 security/security.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/security/security.c b/security/security.c
index b19024830a6d..8a1f3622acef 100644
--- a/security/security.c
+++ b/security/security.c
@@ -1769,7 +1769,6 @@ int security_inode_init_security_anon(struct inode *inode,
 	return call_int_hook(inode_init_security_anon, inode, name,
 			     context_inode);
 }
-EXPORT_SYMBOL_GPL(security_path_rmdir);
 
 #ifdef CONFIG_SECURITY_PATH
 /**
@@ -1806,7 +1805,6 @@ void security_path_post_mknod(struct mnt_idmap *idmap, struct dentry *dentry)
 		return;
 	call_void_hook(path_post_mknod, idmap, dentry);
 }
-EXPORT_SYMBOL_GPL(security_path_symlink);
 
 /**
  * security_path_mkdir() - Check if creating a new directory is allowed
@@ -1842,7 +1840,7 @@ int security_path_rmdir(const struct path *dir, struct dentry *dentry)
 		return 0;
 	return call_int_hook(path_rmdir, dir, dentry);
 }
-EXPORT_SYMBOL_GPL(security_path_link);
+EXPORT_SYMBOL_GPL(security_path_rmdir);
 
 /**
  * security_path_unlink() - Check if removing a hard link is allowed
@@ -1878,7 +1876,7 @@ int security_path_symlink(const struct path *dir, struct dentry *dentry,
 		return 0;
 	return call_int_hook(path_symlink, dir, dentry, old_name);
 }
-EXPORT_SYMBOL_GPL(security_path_chmod);
+EXPORT_SYMBOL_GPL(security_path_symlink);
 
 /**
  * security_path_link - Check if creating a hard link is allowed
@@ -1897,7 +1895,7 @@ int security_path_link(struct dentry *old_dentry, const struct path *new_dir,
 		return 0;
 	return call_int_hook(path_link, old_dentry, new_dir, new_dentry);
 }
-EXPORT_SYMBOL_GPL(security_path_chown);
+EXPORT_SYMBOL_GPL(security_path_link);
 
 /**
  * security_path_rename() - Check if renaming a file is allowed
@@ -1959,6 +1957,7 @@ int security_path_chmod(const struct path *path, umode_t mode)
 		return 0;
 	return call_int_hook(path_chmod, path, mode);
 }
+EXPORT_SYMBOL_GPL(security_path_chmod);
 
 /**
  * security_path_chown() - Check if changing the file's owner/group is allowed
@@ -1976,6 +1975,7 @@ int security_path_chown(const struct path *path, kuid_t uid, kgid_t gid)
 		return 0;
 	return call_int_hook(path_chown, path, uid, gid);
 }
+EXPORT_SYMBOL_GPL(security_path_chown);
 
 /**
  * security_path_chroot() - Check if changing the root directory is allowed
-- 
2.39.2

